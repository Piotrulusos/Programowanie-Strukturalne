#include <stdio.h>
#include <stdlib.h>

int findMax(int n, int tab[]) {
    int max = tab[0];
    for (int i = 1; i < n; i++) {
        if (tab[i] > max) {
            max = tab[i];
        }
    }
    return max;
}

int findMin(int n, int tab[]) {
    int min = tab[0];
    for (int i = 1; i < n; i++) {
        if (tab[i] < min) {
            min = tab[i];
        }
    }
    return min;
}

int findMaxIndex(int n, int tab[]) {
    int maxIndex = 0;
    for (int i = 1; i < n; i++) {
        if (tab[i] > tab[maxIndex]) {
            maxIndex = i;
        }
    }
    return maxIndex;
}

int findMinIndex(int n, int tab[]) {
    int minIndex = 0;
    for (int i = 1; i < n; i++) {
        if (tab[i] < tab[minIndex]) {
            minIndex = i;
        }
    }
    return minIndex;
}

int findMaxAbs(int n, int tab[]) {
    int maxAbs = abs(tab[0]);
    for (int i = 1; i < n; i++) {
        if (abs(tab[i]) > maxAbs) {
            maxAbs = abs(tab[i]);
        }
    }
    return maxAbs;
}

int findMaxAbsIndex(int n, int tab[]) {
    int maxAbsIndex = 0;
    for (int i = 1; i < n; i++) {
        if (abs(tab[i]) > abs(tab[maxAbsIndex])) {
            maxAbsIndex = i;
        }
    }
    return maxAbsIndex;
}

void zad4_2_10() {
    int n = 5;
    int tab[] = {3, -5, 1, 8, 2};

    printf("Najwieksza wartosc w tablicy: %d\n", findMax(n, tab));
    printf("Najmniejsza wartosc w tablicy: %d\n", findMin(n, tab));
    printf("Indeks elementu o najwiekszej wartosci w tablicy: %d\n", findMaxIndex(n, tab));
    printf("Indeks elementu o najmniejszej wartosci w tablicy: %d\n", findMinIndex(n, tab));
    printf("Najwieksza wartosc bezwzgledna w tablicy: %d\n", findMaxAbs(n, tab));
    printf("Indeks elementu o najwiekszej wartosci bezwzglednej w tablicy: %d\n", findMaxAbsIndex(n, tab));

    return 0;
}

int main() {
    zad4_2_10();
    return 0;
}
